name: Run Python Tests
on:
  push:
    branches:
      - main
      - docker
  pull_request:

jobs:
  tests:
    name: build docker images
    runs-on: ubuntu-latest
    env:
      COMPOSE_FILE: tests/docker-compose.yaml

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Make /var/lib/docker world read/writeable
        run: |
          sudo mkdir -p /var/lib/docker
          sudo chmod -R 777 /var/lib/docker

      - name: Restore cached /var/lib/docker
        id: cache-docker-restore
        uses: actions/cache/restore@v3
        with:
          path: /var/lib/docker
          key: local-docker-directory

      - name: Build images
        run: docker compose build

      - name: Make sure /var/lib/docker is world read/writeable
        run: sudo chmod -R 777 /var/lib/docker

      - name: Cache /var/lib/docker
        id: cache-docker-save
        uses: actions/cache/save@v3
        with:
          path: /var/lib/docker
          key: local-docker-directory

      - name: Run tests
        run: docker compose run runtests



#  seechange-postgres:
#    
#  build:
#    name: Run Python Tests
#    runs-on: ubuntu-latest
#
#    services:
#      postgres:
#        image: postgres
#        env:
#          POSTGRES_USER: postgres
#          POSTGRES_PASSWORD: postgres
#        ports:
#          - 5432:5432
#        # needed because the postgres container does not provide a
#        # healthcheck
#        options: >-
#          --health-cmd pg_isready
#          --health-interval 10s
#          --health-timeout 5s
#          --health-retries 5
#
#      seechange-postgres:
#        image: 'docker/postgres/Dockerfile'
#        env:
#          POSTGRES_DATA_DIR: /var/lib/postgresql/data
#        ports:
#          - 5433:5432
#        options: >-
#          --health-cmd pg_isready
#          --health-interval 10s
#          --health-timeout 5s
#          --health-retries 5
#
#    steps:
#      - uses: actions/checkout@v2
#      - name: Install Python 3
#        uses: actions/setup-python@v1
#        with:
#          python-version: 3.8
#      - name: Install dependencies
#        run: |
#          python -m pip install --upgrade pip
#          pip install -r requirements.txt
#      - name: Run tests with pytest
#        env:
#          ZTF_USERNAME: ${{ secrets.ZTF_USERNAME }}
#          ZTF_PASSWORD: ${{ secrets.ZTF_PASSWORD }}
#
#        run: python -m pytest tests/
