services:
  make-archive-directories:
    image: rknop/upload-connector:${IMGTAG:-devshell}
    build:
      context: ../extern/nersc-upload-connector
      args:
        UID: 0
        GID: 0
    volumes:
      - type: volume
        source: devshell-archive-storage
        target: /storage
    entrypoint: >
      bash -c
      "mkdir -p /storage/base &&
      chown ${USERID:-0}:${GROUPID:-0} /storage/base &&
      chmod a+rwx /storage/base"

  archive:
    depends_on:
      make-archive-directories:
        condition: service_completed_successfully
    image: rknop/upload-connector:${IMGTAG:-devshell}
    build:
      context: ../extern/nersc-upload-connector
      args:
        UID: 0
        GID: 0
    healthcheck:
      test: netcat -w 1 localhost 8080 || exit 1
      interval: 5s
      timeout: 10s
      retries: 5
    environment:
      - CONNECTOR_READ_STORAGE=/storage_ro/base
      - CONNECTOR_WRITE_STORAGE=/storage/base
    volumes:
      - type: volume
        source: devshell-archive-storage
        target: /storage
      - type: volume
        source: devshell-archive-storage
        target: /storage_ro
        read_only: true
    secrets:
      - connector_tokens
    user: ${USERID:?err}:${GROUPID:?err}

  postgres:
    image: ghcr.io/${GITHUB_REPOSITORY_OWNER:-c3-time-domain}/seechange-postgres:${IMGTAG:-devshell}
    build:
      context: ../docker/postgres
    volumes:
      - seechange-devshell-postgres-dbdata:/var/lib/postgresql/data
    environment:
      POSTGRES_DATA_DIR: /var/lib/postgresql/data
      POSTGRES_PASSWORD: fragile
    healthcheck:
      test: netcat -w 1 localhost 5432 || exit 1
      interval: 5s
      timeout: 10s
      retries: 5

  setuptables:
    image: ghcr.io/${GITHUB_REPOSITORY_OWNER:-c3-time-domain}/seechange:${IMGTAG:-devshell}
    build:
      context: ../
      dockerfile: ./docker/application/Dockerfile
      target: test_bindmount
    environment:
      SEECHANGE_CONFIG: /seechange/devshell/seechange_devshell.yaml
    depends_on:
      postgres:
         condition: service_healthy
    volumes:
      - type: bind
        source: ..
        target: /seechange
    working_dir: /seechange
    user: ${USERID:?err}:${GROUPID:?err}
    entrypoint: [ "alembic", "upgrade", "head" ]

  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - "${MAILHOG_PORT:-8025}:8025"

  kafka-zookeeper:
    image: ghcr.io/${GITHUB_REPOSITORY_OWNER:-c3-time-domain}/kafka:${IMGTAG:-devshell}
    build:
      context: ../
      dockerfile: ./docker/test_kafka/Dockerfile
    healthcheck:
      test: netcat -w 1 localhost 2181 || exit 1
      interval: 5s
      timeout: 10s
      retries: 5
    entrypoint: [ "bin/zookeeper-server-start.sh", "config/zookeeper.properties" ]

  kafka-server:
    depends_on:
       kafka-zookeeper:
         condition: service_healthy
    image: ghcr.io/${GITHUB_REPOSITORY_OWNER:-c3-time-domain}/kafka:${IMGTAG:-devshell}
    build:
      context: ../
      dockerfile: ./docker/test_kafka/Dockerfile
    healthcheck:
      test: netcat -w 1 localhost 9092 || exit 1
      interval: 5s
      timeout: 10s
      retries: 5
    entrypoint: [ "bin/kafka-server-start.sh", "config/server.properties" ]

  webap:
    depends_on:
      setuptables:
        condition: service_completed_successfully
      make-archive-directories:
        condition: service_completed_successfully
    image: gchr.io/${GITHUB_REPOSITORY_OWNER:-c3-time-domain}/seechange-webap:${IMGTAG:-devshell}
    build:
      context: ../
      dockerfile: ./docker/application/Dockerfile
      target: webap
    user: ${USERID:-0}:${GROUPID:-0}
    ports:
      - "${WEBAP_PORT:-8081}:8081"
    healthcheck:
      test: netcat -w 1 localhost 8081
      interval: 5s
      timeout: 10s
      retries: 5
    volumes:
      - type: volume
        source: devshell-archive-storage
        target: /archive-storage
      - type: volume
        source: devshell-webap-sessions
        target: /sessions
    entrypoint: [ "./run_webap.sh", "8081", "1" ]

  make_data_dir:
    image: ghcr.io/${GITHUB_REPOSITORY_OWNER:-c3-time-domain}/seechange:${IMGTAG:-devshell}
    build:
      context: ../
      dockerfile: ./docker/application/Dockerfile
      target: test_bindmount
    volumes:
      - type: bind
        source: ..
        target: /seechange
    working_dir: /seechange
    user: ${USERID:?err}:${GROUPID:?err}
    entrypoint: bash -c "mkdir -p /seechange/devshell/temp_data"

  shell:
    image: ghcr.io/${GITHUB_REPOSITORY_OWNER:-c3-time-domain}/seechange:${IMGTAG:-devshell}
    build:
      context: ../
      dockerfile: ./docker/application/Dockerfile
      target: test_bindmount
    environment:
      SEECHANGE_CONFIG: /seechange/devshell/seechange_devshell.yaml
      SEECHANGE_TEST_ARCHIVE_DIR: /archive_storage/base
    depends_on:
      setuptables:
        condition: service_completed_successfully
      archive:
        condition: service_healthy
      make_data_dir:
        condition: service_completed_successfully
      webap:
        condition: service_healthy
      kafka-server:
        condition: service_healthy
    volumes:
      - type: bind
        source: ..
        target: /seechange
      - type: volume
        source: devshell-archive-storage
        target: /archive_storage
    working_dir: /seechange
    user: ${USERID:?err}:${GROUPID:?err}
    entrypoint: [ "tail", "-f", "/etc/issue" ]

  shell_nodb:
    image: ghcr.io/${GITHUB_REPOSITORY_OWNER:-c3-time-domain}/seechange:${IMGTAG:-devshell}
    build:
      context: ../
      dockerfile: ./docker/application/Dockerfile
      target: test_bindmount
    environment:
      SEECHANGE_CONFIG: /seechange/devshell/seechange_devshell.yaml
    depends_on:
      make_data_dir:
        condition: service_completed_successfully
    volumes:
      - type: bind
        source: ..
        target: /seechange
    working_dir: /seechange
    user: ${USERID:?err}:${GROUPID:?err}
    entrypoint: [ "tail", "-f", "/etc/issue" ]

  shell_nomigrate:
    image: ghcr.io/${GITHUB_REPOSITORY_OWNER:-c3-time-domain}/seechange:${IMGTAG:-devshell}
    build:
      context: ../
      dockerfile: ./docker/application/Dockerfile
      target: test_bindmount
    environment:
      SEECHANGE_CONFIG: /seechange/devshell/seechange_devshell.yaml
    depends_on:
      postgres:
        condition: service_healthy
      make_data_dir:
        condition: service_completed_successfully
    volumes:
      - type: bind
        source: ..
        target: /seechange
    working_dir: /seechange
    user: ${USERID:?err}:${GROUPID:?err}
    entrypoint: [ "tail", "-f", "/etc/issue" ]

secrets:
  connector_tokens:
    file: ../tests/connector_tokens.txt

volumes:
  devshell-archive-storage:
  seechange-devshell-postgres-dbdata:
  devshell-webap-sessions:
