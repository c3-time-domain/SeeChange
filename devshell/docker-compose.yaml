version: "3.3"
services:
  seechange_postgres:
    image: gchr.io/${GITHUB_REPOSITORY_OWNER}/seechange-postgres
    build: ../docker/postgres
    volumes:
      - seechange-postgres-dbdata:/var/lib/postgresql/data
    environment:
      POSTGRES_DATA_DIR: /var/lib/postgresql/data
    healthcheck:
      test: netcat -w 1 localhost 5432 || exit 1
      interval: 5s
      timeout: 10s
      retries: 5

  # Put a database migration in here ...or don't.  Probably more
  # convenient for the developer to manually handle alembic upgrade
  # head.  (That way, you can start the devshell even if there are
  # syntax errors in your code that would cause the databse migration
  # to fail.)

  # Might be worth putting in an archive server for testing purposes.
  # Alternatively, could have a separate docker-compose file for a
  # development archive server that exposes a port we could then point
  # to here.
  
  seechange:
    image: gchr.io/${GITHUB_REPOSITORY_OWNER}/seechange
    build: ../docker/application
    environment:
      SEECHANGE_CONFIG: /seechange/devshell/seechange_devshell.yaml
    depends_on:
      seechange_postgres:
         condition: service_healthy
    volumes:
      - type: bind
        source: ..
        target: /seechange
    working_dir: /seechange
    user: "${USERID:?err}:${GROUPID:?err}"
    # A hack to keep the image up
    entrypoint: [ "tail", "-f", "/etc/issue" ]

volumes:
  seechange-postgres-dbdata:
