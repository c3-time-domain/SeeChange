"""reference provenance

Revision ID: dcbe7c1b3515
Revises: aae2097b2750
Create Date: 2023-11-29 11:59:53.503943

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'dcbe7c1b3515'
down_revision = 'aae2097b2750'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('image_upstreams_association',
    sa.Column('upstream_id', sa.Integer(), nullable=False),
    sa.Column('downstream_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['downstream_id'], ['images.id'], name='image_upstreams_association_downstream_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['upstream_id'], ['images.id'], name='image_upstreams_association_upstream_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('upstream_id', 'downstream_id')
    )
    op.create_table('references',
    sa.Column('image_id', sa.BigInteger(), nullable=False),
    sa.Column('target', sa.Text(), nullable=False),
    sa.Column('filter', sa.Text(), nullable=False),
    sa.Column('section_id', sa.Text(), nullable=False),
    sa.Column('validity_start', sa.DateTime(), nullable=True),
    sa.Column('validity_end', sa.DateTime(), nullable=True),
    sa.Column('is_bad', sa.Boolean(), nullable=False),
    sa.Column('bad_reason', sa.Text(), nullable=True),
    sa.Column('bad_comment', sa.Text(), nullable=True),
    sa.Column('provenance_id', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('modified', sa.DateTime(), nullable=False),
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['image_id'], ['images.id'], name='references_image_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['provenance_id'], ['provenances.id'], name='references_provenance_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_references_created_at'), 'references', ['created_at'], unique=False)
    op.create_index(op.f('ix_references_filter'), 'references', ['filter'], unique=False)
    op.create_index(op.f('ix_references_id'), 'references', ['id'], unique=False)
    op.create_index(op.f('ix_references_image_id'), 'references', ['image_id'], unique=False)
    op.create_index(op.f('ix_references_provenance_id'), 'references', ['provenance_id'], unique=False)
    op.create_index(op.f('ix_references_section_id'), 'references', ['section_id'], unique=False)
    op.create_index(op.f('ix_references_target'), 'references', ['target'], unique=False)
    op.create_index(op.f('ix_references_validity_end'), 'references', ['validity_end'], unique=False)
    op.create_index(op.f('ix_references_validity_start'), 'references', ['validity_start'], unique=False)
    op.drop_index('ix_reference_images_created_at', table_name='reference_images')
    op.drop_index('ix_reference_images_filter', table_name='reference_images')
    op.drop_index('ix_reference_images_id', table_name='reference_images')
    op.drop_index('ix_reference_images_image_id', table_name='reference_images')
    op.drop_index('ix_reference_images_section_id', table_name='reference_images')
    op.drop_index('ix_reference_images_target', table_name='reference_images')
    op.drop_index('ix_reference_images_validity_end', table_name='reference_images')
    op.drop_index('ix_reference_images_validity_start', table_name='reference_images')
    op.drop_table('reference_images')
    op.drop_table('image_sources')
    op.add_column('images', sa.Column('is_sub', sa.Boolean(), nullable=False))
    op.add_column('images', sa.Column('is_coadd', sa.Boolean(), nullable=False))
    op.add_column('images', sa.Column('is_warped', sa.Boolean(), nullable=False))
    op.add_column('images', sa.Column('sky_sub_done', sa.BOOLEAN(), nullable=False))
    op.add_column('images', sa.Column('fwhm_estimate', sa.Float(), nullable=True))
    op.add_column('images', sa.Column('zero_point_estimate', sa.Float(), nullable=True))
    op.add_column('images', sa.Column('lim_mag_estimate', sa.Float(), nullable=True))
    op.add_column('images', sa.Column('bkg_mean_estimate', sa.Float(), nullable=True))
    op.add_column('images', sa.Column('bkg_rms_estimate', sa.Float(), nullable=True))
    op.add_column('images', sa.Column('_upstream_bitflag', sa.BIGINT(), nullable=False))
    op.create_index(op.f('ix_images__upstream_bitflag'), 'images', ['_upstream_bitflag'], unique=False)
    op.create_index(op.f('ix_images_bkg_mean_estimate'), 'images', ['bkg_mean_estimate'], unique=False)
    op.create_index(op.f('ix_images_bkg_rms_estimate'), 'images', ['bkg_rms_estimate'], unique=False)
    op.create_index(op.f('ix_images_fwhm_estimate'), 'images', ['fwhm_estimate'], unique=False)
    op.create_index(op.f('ix_images_is_coadd'), 'images', ['is_coadd'], unique=False)
    op.create_index(op.f('ix_images_is_sub'), 'images', ['is_sub'], unique=False)
    op.create_index(op.f('ix_images_is_warped'), 'images', ['is_warped'], unique=False)
    op.create_index(op.f('ix_images_lim_mag_estimate'), 'images', ['lim_mag_estimate'], unique=False)
    op.create_index(op.f('ix_images_zero_point_estimate'), 'images', ['zero_point_estimate'], unique=False)
    op.drop_constraint('images_new_image_id_fkey', 'images', type_='foreignkey')
    op.drop_constraint('images_ref_image_id_fkey', 'images', type_='foreignkey')
    op.create_foreign_key('images_new_image_id_fkey', 'images', 'images', ['new_image_id'], ['id'], ondelete='SET NULL')
    op.create_foreign_key('images_ref_image_id_fkey', 'images', 'images', ['ref_image_id'], ['id'], ondelete='SET NULL')
    op.add_column('psfs', sa.Column('_bitflag', sa.BIGINT(), nullable=False))
    op.add_column('psfs', sa.Column('description', sa.Text(), nullable=True))
    op.add_column('psfs', sa.Column('_upstream_bitflag', sa.BIGINT(), nullable=False))
    op.create_index(op.f('ix_psfs__bitflag'), 'psfs', ['_bitflag'], unique=False)
    op.create_index(op.f('ix_psfs__upstream_bitflag'), 'psfs', ['_upstream_bitflag'], unique=False)
    op.add_column('source_lists', sa.Column('_upstream_bitflag', sa.BIGINT(), nullable=False))
    op.create_index(op.f('ix_source_lists__upstream_bitflag'), 'source_lists', ['_upstream_bitflag'], unique=False)
    op.add_column('world_coordinates', sa.Column('_bitflag', sa.BIGINT(), nullable=False))
    op.add_column('world_coordinates', sa.Column('description', sa.Text(), nullable=True))
    op.add_column('world_coordinates', sa.Column('_upstream_bitflag', sa.BIGINT(), nullable=False))
    op.create_index(op.f('ix_world_coordinates__bitflag'), 'world_coordinates', ['_bitflag'], unique=False)
    op.create_index(op.f('ix_world_coordinates__upstream_bitflag'), 'world_coordinates', ['_upstream_bitflag'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_world_coordinates__upstream_bitflag'), table_name='world_coordinates')
    op.drop_index(op.f('ix_world_coordinates__bitflag'), table_name='world_coordinates')
    op.drop_column('world_coordinates', '_upstream_bitflag')
    op.drop_column('world_coordinates', 'description')
    op.drop_column('world_coordinates', '_bitflag')
    op.drop_index(op.f('ix_source_lists__upstream_bitflag'), table_name='source_lists')
    op.drop_column('source_lists', '_upstream_bitflag')
    op.drop_index(op.f('ix_psfs__upstream_bitflag'), table_name='psfs')
    op.drop_index(op.f('ix_psfs__bitflag'), table_name='psfs')
    op.drop_column('psfs', '_upstream_bitflag')
    op.drop_column('psfs', 'description')
    op.drop_column('psfs', '_bitflag')
    op.drop_constraint('images_ref_image_id_fkey', 'images', type_='foreignkey')
    op.drop_constraint('images_new_image_id_fkey', 'images', type_='foreignkey')
    op.create_foreign_key('images_ref_image_id_fkey', 'images', 'images', ['ref_image_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('images_new_image_id_fkey', 'images', 'images', ['new_image_id'], ['id'], ondelete='CASCADE')
    op.drop_index(op.f('ix_images_zero_point_estimate'), table_name='images')
    op.drop_index(op.f('ix_images_lim_mag_estimate'), table_name='images')
    op.drop_index(op.f('ix_images_is_warped'), table_name='images')
    op.drop_index(op.f('ix_images_is_sub'), table_name='images')
    op.drop_index(op.f('ix_images_is_coadd'), table_name='images')
    op.drop_index(op.f('ix_images_fwhm_estimate'), table_name='images')
    op.drop_index(op.f('ix_images_bkg_rms_estimate'), table_name='images')
    op.drop_index(op.f('ix_images_bkg_mean_estimate'), table_name='images')
    op.drop_index(op.f('ix_images__upstream_bitflag'), table_name='images')
    op.drop_column('images', '_upstream_bitflag')
    op.drop_column('images', 'bkg_rms_estimate')
    op.drop_column('images', 'bkg_mean_estimate')
    op.drop_column('images', 'lim_mag_estimate')
    op.drop_column('images', 'zero_point_estimate')
    op.drop_column('images', 'fwhm_estimate')
    op.drop_column('images', 'sky_sub_done')
    op.drop_column('images', 'is_warped')
    op.drop_column('images', 'is_coadd')
    op.drop_column('images', 'is_sub')
    op.create_table('image_sources',
    sa.Column('source_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('combined_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['combined_id'], ['images.id'], name='image_sources_combined_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['source_id'], ['images.id'], name='image_sources_source_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('source_id', 'combined_id', name='image_sources_pkey')
    )
    op.create_table('reference_images',
    sa.Column('image_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('target', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('filter', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('section_id', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('validity_start', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('validity_end', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('is_bad', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('bad_reason', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('bad_comment', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('modified', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['image_id'], ['images.id'], name='reference_images_image_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='reference_images_pkey')
    )
    op.create_index('ix_reference_images_validity_start', 'reference_images', ['validity_start'], unique=False)
    op.create_index('ix_reference_images_validity_end', 'reference_images', ['validity_end'], unique=False)
    op.create_index('ix_reference_images_target', 'reference_images', ['target'], unique=False)
    op.create_index('ix_reference_images_section_id', 'reference_images', ['section_id'], unique=False)
    op.create_index('ix_reference_images_image_id', 'reference_images', ['image_id'], unique=False)
    op.create_index('ix_reference_images_id', 'reference_images', ['id'], unique=False)
    op.create_index('ix_reference_images_filter', 'reference_images', ['filter'], unique=False)
    op.create_index('ix_reference_images_created_at', 'reference_images', ['created_at'], unique=False)
    op.drop_index(op.f('ix_references_validity_start'), table_name='references')
    op.drop_index(op.f('ix_references_validity_end'), table_name='references')
    op.drop_index(op.f('ix_references_target'), table_name='references')
    op.drop_index(op.f('ix_references_section_id'), table_name='references')
    op.drop_index(op.f('ix_references_provenance_id'), table_name='references')
    op.drop_index(op.f('ix_references_image_id'), table_name='references')
    op.drop_index(op.f('ix_references_id'), table_name='references')
    op.drop_index(op.f('ix_references_filter'), table_name='references')
    op.drop_index(op.f('ix_references_created_at'), table_name='references')
    op.drop_table('references')
    op.drop_table('image_upstreams_association')
    # ### end Alembic commands ###
