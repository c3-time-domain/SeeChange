"""measurements_changes

Revision ID: 94601e39a363
Revises: ba5f61f8d419
Create Date: 2025-01-24 15:44:28.105330

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '94601e39a363'
down_revision = 'ba5f61f8d419'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('measurements', sa.Column('bkg_per_pix', sa.REAL(), server_default=sa.text('0.0'), nullable=False))
    op.add_column('measurements', sa.Column('x', sa.REAL(), nullable=False))
    op.add_column('measurements', sa.Column('y', sa.REAL(), nullable=False))
    op.add_column('measurements', sa.Column('gfit_x', sa.REAL(), nullable=False))
    op.add_column('measurements', sa.Column('gfit_y', sa.REAL(), nullable=False))
    op.add_column('measurements', sa.Column('major_width', sa.REAL(), nullable=False))
    op.add_column('measurements', sa.Column('minor_width', sa.REAL(), nullable=False))
    op.add_column('measurements', sa.Column('psf_fit_flags', sa.Integer(), nullable=True))
    op.add_column('measurements', sa.Column('nbadpix', sa.Integer(), nullable=True))
    op.add_column('measurements', sa.Column('negfrac', sa.REAL(), nullable=True))
    op.add_column('measurements', sa.Column('negfluxfrac', sa.REAL(), nullable=True))
    op.drop_index('ix_measurements_disqualifier_scores', table_name='measurements')
    op.drop_index('ix_measurements_scores_gin', table_name='measurements', postgresql_using='gin')
    op.drop_index('ix_measurements_width', table_name='measurements')
    op.drop_column('measurements', 'disqualifier_scores')
    op.drop_column('measurements', 'area_psf')
    op.drop_column('measurements', 'bkg_mean')
    op.drop_column('measurements', 'area_apertures')
    op.drop_column('measurements', 'elongation')
    op.drop_column('measurements', 'bkg_pix')
    op.drop_column('measurements', 'width')
    op.drop_column('measurements', 'offset_y')
    op.drop_column('measurements', 'bkg_std')
    op.drop_column('measurements', 'offset_x')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('measurements', sa.Column('offset_x', sa.REAL(), autoincrement=False, nullable=False))
    op.add_column('measurements', sa.Column('bkg_std', sa.REAL(), autoincrement=False, nullable=False))
    op.add_column('measurements', sa.Column('offset_y', sa.REAL(), autoincrement=False, nullable=False))
    op.add_column('measurements', sa.Column('width', sa.REAL(), autoincrement=False, nullable=False))
    op.add_column('measurements', sa.Column('bkg_pix', sa.REAL(), autoincrement=False, nullable=False))
    op.add_column('measurements', sa.Column('elongation', sa.REAL(), autoincrement=False, nullable=False))
    op.add_column('measurements', sa.Column('area_apertures', postgresql.ARRAY(sa.REAL()), autoincrement=False, nullable=False))
    op.add_column('measurements', sa.Column('bkg_mean', sa.REAL(), autoincrement=False, nullable=False))
    op.add_column('measurements', sa.Column('area_psf', sa.REAL(), autoincrement=False, nullable=False))
    op.add_column('measurements', sa.Column('disqualifier_scores', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=False))
    op.create_index('ix_measurements_width', 'measurements', ['width'], unique=False)
    op.create_index('ix_measurements_scores_gin', 'measurements', ['disqualifier_scores'], unique=False, postgresql_using='gin')
    op.create_index('ix_measurements_disqualifier_scores', 'measurements', ['disqualifier_scores'], unique=False)
    op.drop_column('measurements', 'negfluxfrac')
    op.drop_column('measurements', 'negfrac')
    op.drop_column('measurements', 'nbadpix')
    op.drop_column('measurements', 'psf_fit_flags')
    op.drop_column('measurements', 'minor_width')
    op.drop_column('measurements', 'major_width')
    op.drop_column('measurements', 'gfit_y')
    op.drop_column('measurements', 'gfit_x')
    op.drop_column('measurements', 'y')
    op.drop_column('measurements', 'x')
    op.drop_column('measurements', 'bkg_per_pix')
    # ### end Alembic commands ###
