"""codeversion rework pt3

Revision ID: ddb3f80c9bfb
Revises: ff8f1c5af08c
Create Date: 2025-05-15 15:59:10.278792

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'ddb3f80c9bfb'
down_revision = 'eec1bc160d1f'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('code_hashes_code_version_id_fkey', 'code_hashes', type_='foreignkey')

    op.drop_index('ix_provenances_code_version_id', table_name='provenances')
    op.drop_constraint('provenances_code_version_id_fkey', 'provenances', type_='foreignkey')
    op.drop_column('provenances', 'code_version_id')

    op.add_column('code_versions', sa.Column('version_major', sa.Integer(), nullable=False))
    op.add_column('code_versions', sa.Column('version_minor', sa.Integer(), nullable=False))
    op.add_column('code_versions', sa.Column('version_patch', sa.Integer(), nullable=False))

    op.add_column('code_versions', sa.Column('process', sa.String(), nullable=False))
    op.alter_column('code_versions', '_id',
               existing_type=sa.VARCHAR(),
               type_=sa.UUID(),
               existing_nullable=False,
               postgresql_using='_id::uuid')
    op.create_index(op.f('ix_code_versions__id'), 'code_versions', ['_id'], unique=False)
    op.create_unique_constraint('_codeversion_process_versions_uc', 'code_versions', ['process', 'version_minor', 'version_major', 'version_patch'])

    op.add_column('provenances', sa.Column('code_version_id', sa.UUID(), nullable=False))
    op.create_index(op.f('ix_provenances_code_version_id'), 'provenances', ['code_version_id'], unique=False)
    op.create_foreign_key('provenances_code_version_id_fkey', 'provenances', 'code_versions', ['code_version_id'], ['_id'], ondelete='CASCADE')

    op.drop_index('ix_code_hashes_code_version_id', table_name='code_hashes')
    op.drop_index('ix_code_hashes_created_at', table_name='code_hashes')
    op.drop_table('code_hashes')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('code_hashes',
    sa.Column('_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('code_version_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('modified', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('_id', name='code_hashes_pkey')
    )
    op.create_index('ix_code_hashes_created_at', 'code_hashes', ['created_at'], unique=False)
    op.create_index('ix_code_hashes_code_version_id', 'code_hashes', ['code_version_id'], unique=False)
    op.drop_constraint('provenances_code_version_id_fkey', 'provenances', type_='foreignkey')
    op.drop_index(op.f('ix_provenances_code_version_id'), table_name='provenances')
    op.drop_column('provenances', 'code_version_id')

    op.drop_constraint('_codeversion_process_versions_uc', 'code_versions', type_='unique')
    op.drop_index(op.f('ix_code_versions__id'), table_name='code_versions')
    op.alter_column('code_versions', '_id',
               existing_type=sa.UUID(),
               type_=sa.VARCHAR(),
               existing_nullable=False)
    op.drop_column('code_versions', 'process')
    op.drop_column('code_versions', 'version_patch')
    op.drop_column('code_versions', 'version_minor')
    op.drop_column('code_versions', 'version_major')

    op.add_column('provenances', sa.Column('code_version_id', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.create_foreign_key('provenances_code_version_id_fkey', 'provenances', 'code_versions', ['code_version_id'], ['_id'], ondelete='CASCADE')
    op.create_index('ix_provenances_code_version_id', 'provenances', ['code_version_id'], unique=False)

    op.create_foreign_key('code_hashes_code_version_id_fkey', 'code_hashes', 'code_versions', ['code_version_id'], ['_id'], ondelete='CASCADE')
    # ### end Alembic commands ###
