"""initial setup

Revision ID: f940bef6bf71
Revises: 
Create Date: 2023-05-19 15:25:14.920521

"""
from alembic import op
from sqlalchemy.sql import text
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'f940bef6bf71'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('code_versions',
    sa.Column('version', sa.String(), nullable=False),
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('modified', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_code_versions_created_at'), 'code_versions', ['created_at'], unique=False)
    op.create_index(op.f('ix_code_versions_id'), 'code_versions', ['id'], unique=False)
    op.create_index(op.f('ix_code_versions_version'), 'code_versions', ['version'], unique=True)
    op.create_table('cutouts',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('modified', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_cutouts_created_at'), 'cutouts', ['created_at'], unique=False)
    op.create_index(op.f('ix_cutouts_id'), 'cutouts', ['id'], unique=False)
    op.create_table('exposures',
    sa.Column('header', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('mjd', sa.Double(), nullable=False),
    sa.Column('exp_time', sa.Float(), nullable=False),
    sa.Column('filter', sa.Text(), nullable=True),
    sa.Column('filter_array', sa.ARRAY(sa.Text()), nullable=True),
    sa.Column('instrument', sa.Text(), nullable=False),
    sa.Column('section_id', sa.Text(), nullable=False),
    sa.Column('telescope', sa.Text(), nullable=False),
    sa.Column('project', sa.Text(), nullable=False),
    sa.Column('target', sa.Text(), nullable=False),
    sa.Column('gallat', sa.Double(), nullable=True),
    sa.Column('gallon', sa.Double(), nullable=True),
    sa.Column('ecllat', sa.Double(), nullable=True),
    sa.Column('ecllon', sa.Double(), nullable=True),
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('modified', sa.DateTime(), nullable=False),
    sa.Column('filename', sa.Text(), nullable=False),
    sa.Column('filename_extensions', sa.ARRAY(sa.Text()), nullable=True),
    sa.Column('ra', sa.Double(), nullable=False),
    sa.Column('dec', sa.Double(), nullable=False),
    sa.CheckConstraint('NOT(filter IS NULL AND filter_array IS NULL)', name='exposures_filter_or_array_check'),
    sa.PrimaryKeyConstraint('id')
    )
    # Q3C index
    op.get_bind().execute(text('CREATE EXTENSION IF NOT EXISTS q3c;'))
    op.create_index('exposure_q3c_ang2ipix_idx', 'exposures', [sa.text('q3c_ang2ipix(ra, dec)')], unique=False)
    op.create_index(op.f('ix_exposures_created_at'), 'exposures', ['created_at'], unique=False)
    op.create_index(op.f('ix_exposures_ecllat'), 'exposures', ['ecllat'], unique=False)
    op.create_index(op.f('ix_exposures_exp_time'), 'exposures', ['exp_time'], unique=False)
    op.create_index(op.f('ix_exposures_filename'), 'exposures', ['filename'], unique=True)
    op.create_index(op.f('ix_exposures_filter'), 'exposures', ['filter'], unique=False)
    op.create_index(op.f('ix_exposures_filter_array'), 'exposures', ['filter_array'], unique=False)
    op.create_index(op.f('ix_exposures_gallat'), 'exposures', ['gallat'], unique=False)
    op.create_index(op.f('ix_exposures_id'), 'exposures', ['id'], unique=False)
    op.create_index(op.f('ix_exposures_instrument'), 'exposures', ['instrument'], unique=False)
    op.create_index(op.f('ix_exposures_mjd'), 'exposures', ['mjd'], unique=False)
    op.create_index(op.f('ix_exposures_project'), 'exposures', ['project'], unique=False)
    op.create_index(op.f('ix_exposures_section_id'), 'exposures', ['section_id'], unique=False)
    op.create_index(op.f('ix_exposures_target'), 'exposures', ['target'], unique=False)
    op.create_index(op.f('ix_exposures_telescope'), 'exposures', ['telescope'], unique=False)
    op.create_table('images',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('modified', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_images_created_at'), 'images', ['created_at'], unique=False)
    op.create_index(op.f('ix_images_id'), 'images', ['id'], unique=False)
    op.create_table('measurements',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('modified', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_measurements_created_at'), 'measurements', ['created_at'], unique=False)
    op.create_index(op.f('ix_measurements_id'), 'measurements', ['id'], unique=False)
    op.create_table('sensor_sections',
    sa.Column('instrument', sa.Text(), nullable=False),
    sa.Column('identifier', sa.Text(), nullable=False),
    sa.Column('validity_start', sa.DateTime(), nullable=True),
    sa.Column('validity_end', sa.DateTime(), nullable=True),
    sa.Column('size_x', sa.Integer(), nullable=True),
    sa.Column('size_y', sa.Integer(), nullable=True),
    sa.Column('offset_x', sa.Integer(), nullable=True),
    sa.Column('offset_y', sa.Integer(), nullable=True),
    sa.Column('filter_array_index', sa.Integer(), nullable=True),
    sa.Column('read_noise', sa.Float(), nullable=True),
    sa.Column('dark_current', sa.Float(), nullable=True),
    sa.Column('gain', sa.Float(), nullable=True),
    sa.Column('saturation_limit', sa.Float(), nullable=True),
    sa.Column('non_linearity_limit', sa.Float(), nullable=True),
    sa.Column('defective', sa.Boolean(), nullable=False),
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('modified', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_sensor_sections_created_at'), 'sensor_sections', ['created_at'], unique=False)
    op.create_index(op.f('ix_sensor_sections_defective'), 'sensor_sections', ['defective'], unique=False)
    op.create_index(op.f('ix_sensor_sections_id'), 'sensor_sections', ['id'], unique=False)
    op.create_index(op.f('ix_sensor_sections_identifier'), 'sensor_sections', ['identifier'], unique=False)
    op.create_index(op.f('ix_sensor_sections_instrument'), 'sensor_sections', ['instrument'], unique=False)
    op.create_index(op.f('ix_sensor_sections_validity_end'), 'sensor_sections', ['validity_end'], unique=False)
    op.create_index(op.f('ix_sensor_sections_validity_start'), 'sensor_sections', ['validity_start'], unique=False)
    op.create_table('source_lists',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('modified', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_source_lists_created_at'), 'source_lists', ['created_at'], unique=False)
    op.create_index(op.f('ix_source_lists_id'), 'source_lists', ['id'], unique=False)
    op.create_table('world_coordinates',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('modified', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_world_coordinates_created_at'), 'world_coordinates', ['created_at'], unique=False)
    op.create_index(op.f('ix_world_coordinates_id'), 'world_coordinates', ['id'], unique=False)
    op.create_table('zero_points',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('modified', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_zero_points_created_at'), 'zero_points', ['created_at'], unique=False)
    op.create_index(op.f('ix_zero_points_id'), 'zero_points', ['id'], unique=False)
    op.create_table('code_hashes',
    sa.Column('hash', sa.String(), nullable=True),
    sa.Column('code_version_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('modified', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['code_version_id'], ['code_versions.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_code_hashes_created_at'), 'code_hashes', ['created_at'], unique=False)
    op.create_index(op.f('ix_code_hashes_hash'), 'code_hashes', ['hash'], unique=True)
    op.create_index(op.f('ix_code_hashes_id'), 'code_hashes', ['id'], unique=False)
    op.create_table('provenances',
    sa.Column('process', sa.String(), nullable=False),
    sa.Column('code_version_id', sa.BigInteger(), nullable=False),
    sa.Column('parameters', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('unique_hash', sa.String(), nullable=False),
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('modified', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['code_version_id'], ['code_versions.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_provenances_code_version_id'), 'provenances', ['code_version_id'], unique=False)
    op.create_index(op.f('ix_provenances_created_at'), 'provenances', ['created_at'], unique=False)
    op.create_index(op.f('ix_provenances_id'), 'provenances', ['id'], unique=False)
    op.create_index(op.f('ix_provenances_process'), 'provenances', ['process'], unique=False)
    op.create_index(op.f('ix_provenances_unique_hash'), 'provenances', ['unique_hash'], unique=True)
    op.create_table('provenance_upstreams',
    sa.Column('upstream_id', sa.Integer(), nullable=False),
    sa.Column('downstream_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['downstream_id'], ['provenances.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['upstream_id'], ['provenances.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('upstream_id', 'downstream_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('provenance_upstreams')
    op.drop_index(op.f('ix_provenances_unique_hash'), table_name='provenances')
    op.drop_index(op.f('ix_provenances_process'), table_name='provenances')
    op.drop_index(op.f('ix_provenances_id'), table_name='provenances')
    op.drop_index(op.f('ix_provenances_created_at'), table_name='provenances')
    op.drop_index(op.f('ix_provenances_code_version_id'), table_name='provenances')
    op.drop_table('provenances')
    op.drop_index(op.f('ix_code_hashes_id'), table_name='code_hashes')
    op.drop_index(op.f('ix_code_hashes_hash'), table_name='code_hashes')
    op.drop_index(op.f('ix_code_hashes_created_at'), table_name='code_hashes')
    op.drop_table('code_hashes')
    op.drop_index(op.f('ix_zero_points_id'), table_name='zero_points')
    op.drop_index(op.f('ix_zero_points_created_at'), table_name='zero_points')
    op.drop_table('zero_points')
    op.drop_index(op.f('ix_world_coordinates_id'), table_name='world_coordinates')
    op.drop_index(op.f('ix_world_coordinates_created_at'), table_name='world_coordinates')
    op.drop_table('world_coordinates')
    op.drop_index(op.f('ix_source_lists_id'), table_name='source_lists')
    op.drop_index(op.f('ix_source_lists_created_at'), table_name='source_lists')
    op.drop_table('source_lists')
    op.drop_index(op.f('ix_sensor_sections_validity_start'), table_name='sensor_sections')
    op.drop_index(op.f('ix_sensor_sections_validity_end'), table_name='sensor_sections')
    op.drop_index(op.f('ix_sensor_sections_instrument'), table_name='sensor_sections')
    op.drop_index(op.f('ix_sensor_sections_identifier'), table_name='sensor_sections')
    op.drop_index(op.f('ix_sensor_sections_id'), table_name='sensor_sections')
    op.drop_index(op.f('ix_sensor_sections_defective'), table_name='sensor_sections')
    op.drop_index(op.f('ix_sensor_sections_created_at'), table_name='sensor_sections')
    op.drop_table('sensor_sections')
    op.drop_index(op.f('ix_measurements_id'), table_name='measurements')
    op.drop_index(op.f('ix_measurements_created_at'), table_name='measurements')
    op.drop_table('measurements')
    op.drop_index(op.f('ix_images_id'), table_name='images')
    op.drop_index(op.f('ix_images_created_at'), table_name='images')
    op.drop_table('images')
    op.drop_index(op.f('ix_exposures_telescope'), table_name='exposures')
    op.drop_index(op.f('ix_exposures_target'), table_name='exposures')
    op.drop_index(op.f('ix_exposures_section_id'), table_name='exposures')
    op.drop_index(op.f('ix_exposures_project'), table_name='exposures')
    op.drop_index(op.f('ix_exposures_mjd'), table_name='exposures')
    op.drop_index(op.f('ix_exposures_instrument'), table_name='exposures')
    op.drop_index(op.f('ix_exposures_id'), table_name='exposures')
    op.drop_index(op.f('ix_exposures_gallat'), table_name='exposures')
    op.drop_index(op.f('ix_exposures_filter_array'), table_name='exposures')
    op.drop_index(op.f('ix_exposures_filter'), table_name='exposures')
    op.drop_index(op.f('ix_exposures_filename'), table_name='exposures')
    op.drop_index(op.f('ix_exposures_exp_time'), table_name='exposures')
    op.drop_index(op.f('ix_exposures_ecllat'), table_name='exposures')
    op.drop_index(op.f('ix_exposures_created_at'), table_name='exposures')
    op.drop_index('exposure_q3c_ang2ipix_idx', table_name='exposures')
    op.drop_table('exposures')
    op.drop_index(op.f('ix_cutouts_id'), table_name='cutouts')
    op.drop_index(op.f('ix_cutouts_created_at'), table_name='cutouts')
    op.drop_table('cutouts')
    op.drop_index(op.f('ix_code_versions_version'), table_name='code_versions')
    op.drop_index(op.f('ix_code_versions_id'), table_name='code_versions')
    op.drop_index(op.f('ix_code_versions_created_at'), table_name='code_versions')
    op.drop_table('code_versions')
    # ### end Alembic commands ###
