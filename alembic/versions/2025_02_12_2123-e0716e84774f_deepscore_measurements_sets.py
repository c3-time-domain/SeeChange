"""deepscore_measurements_sets

Revision ID: e0716e84774f
Revises: e447efae5462
Create Date: 2025-02-12 21:23:05.835430

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'e0716e84774f'
down_revision = 'e447efae5462'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('measurement_sets',
    sa.Column('cutouts_id', sa.UUID(), nullable=False),
    sa.Column('provenance_id', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('modified', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('_id', sa.UUID(), nullable=False),
    sa.Column('_bitflag', sa.BIGINT(), server_default=sa.text('0'), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('_upstream_bitflag', sa.BIGINT(), server_default=sa.text('0'), nullable=False),
    sa.ForeignKeyConstraint(['cutouts_id'], ['cutouts._id'], name='meas_set_cutouts_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['provenance_id'], ['provenances._id'], name='meas_set_provenance_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('_id'),
    sa.UniqueConstraint('cutouts_id', 'provenance_id', name='_measurement_sets_uc')
    )
    op.create_index(op.f('ix_measurement_sets__bitflag'), 'measurement_sets', ['_bitflag'], unique=False)
    op.create_index(op.f('ix_measurement_sets__id'), 'measurement_sets', ['_id'], unique=False)
    op.create_index(op.f('ix_measurement_sets__upstream_bitflag'), 'measurement_sets', ['_upstream_bitflag'], unique=False)
    op.create_index(op.f('ix_measurement_sets_created_at'), 'measurement_sets', ['created_at'], unique=False)
    op.create_index(op.f('ix_measurement_sets_cutouts_id'), 'measurement_sets', ['cutouts_id'], unique=False)
    op.create_index(op.f('ix_measurement_sets_provenance_id'), 'measurement_sets', ['provenance_id'], unique=False)
    op.create_table('deepscore_sets',
    sa.Column('measurementset_id', sa.UUID(), nullable=False),
    sa.Column('provenance_id', sa.String(), nullable=False),
    sa.Column('_algorithm', sa.SMALLINT(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('modified', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('_id', sa.UUID(), nullable=False),
    sa.Column('_bitflag', sa.BIGINT(), server_default=sa.text('0'), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('_upstream_bitflag', sa.BIGINT(), server_default=sa.text('0'), nullable=False),
    sa.ForeignKeyConstraint(['measurementset_id'], ['measurement_sets._id'], name='score_set_meas_set_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['provenance_id'], ['provenances._id'], name='score_set_provenance_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('_id'),
    sa.UniqueConstraint('measurementset_id', '_algorithm', 'provenance_id', name='_deepscoreset_unique_uc')
    )
    op.create_index(op.f('ix_deepscore_sets__bitflag'), 'deepscore_sets', ['_bitflag'], unique=False)
    op.create_index(op.f('ix_deepscore_sets__id'), 'deepscore_sets', ['_id'], unique=False)
    op.create_index(op.f('ix_deepscore_sets__upstream_bitflag'), 'deepscore_sets', ['_upstream_bitflag'], unique=False)
    op.create_index(op.f('ix_deepscore_sets_created_at'), 'deepscore_sets', ['created_at'], unique=False)
    op.create_index(op.f('ix_deepscore_sets_measurementset_id'), 'deepscore_sets', ['measurementset_id'], unique=False)
    op.create_index(op.f('ix_deepscore_sets_provenance_id'), 'deepscore_sets', ['provenance_id'], unique=False)
    op.add_column('deepscores', sa.Column('deepscoreset_id', sa.UUID(), nullable=False))
    op.add_column('deepscores', sa.Column('index_in_sources', sa.Integer(), nullable=False))
    op.drop_constraint('_algorithm_measurements_provenance_uc', 'deepscores', type_='unique')
    op.drop_index('ix_deepscores_measurements_id', table_name='deepscores')
    op.drop_index('ix_deepscores_provenance_id', table_name='deepscores')
    op.create_unique_constraint('_deepscore_unique_uc', 'deepscores', ['deepscoreset_id', 'index_in_sources'])
    op.create_index(op.f('ix_deepscores_deepscoreset_id'), 'deepscores', ['deepscoreset_id'], unique=False)
    op.create_index(op.f('ix_deepscores_index_in_sources'), 'deepscores', ['index_in_sources'], unique=False)
    op.drop_constraint('deepscore_provenance_id_fkey', 'deepscores', type_='foreignkey')
    op.drop_constraint('deepscore_measurements_id_fkey', 'deepscores', type_='foreignkey')
    op.create_foreign_key('score_score_set_id_fkey', 'deepscores', 'deepscore_sets', ['deepscoreset_id'], ['_id'], ondelete='CASCADE')
    op.drop_column('deepscores', 'provenance_id')
    op.drop_column('deepscores', 'measurements_id')
    op.drop_column('deepscores', '_algorithm')
    op.add_column('fake_analysis', sa.Column('orig_deepscore_set_id', sa.UUID(), nullable=False))
    op.drop_index('ix_fake_analysis_provenance_id', table_name='fake_analysis')
    op.create_unique_constraint('fake_analysis_uic', 'fake_analysis', ['fakeset_id', 'orig_deepscore_set_id'])
    op.create_index(op.f('ix_fake_analysis_orig_deepscore_set_id'), 'fake_analysis', ['orig_deepscore_set_id'], unique=False)
    op.drop_constraint('fake_analysis_provenance_id_fkey', 'fake_analysis', type_='foreignkey')
    op.create_foreign_key('fake_anal_deepscore_set_id_fkey', 'fake_analysis', 'deepscore_sets', ['orig_deepscore_set_id'], ['_id'], ondelete='CASCADE')
    op.drop_column('fake_analysis', 'provenance_id')
    op.add_column('measurements', sa.Column('measurementset_id', sa.UUID(), nullable=False))
    op.drop_constraint('_measurements_cutouts_provenance_uc', 'measurements', type_='unique')
    op.drop_index('ix_measurements_cutouts_id', table_name='measurements')
    op.drop_index('ix_measurements_provenance_id', table_name='measurements')
    op.create_unique_constraint('_measurements_uc', 'measurements', ['measurementset_id', 'index_in_sources'])
    op.create_index(op.f('ix_measurements_index_in_sources'), 'measurements', ['index_in_sources'], unique=False)
    op.create_index(op.f('ix_measurements_measurementset_id'), 'measurements', ['measurementset_id'], unique=False)
    op.drop_constraint('measurements_provenance_id_fkey', 'measurements', type_='foreignkey')
    op.drop_constraint('measurements_cutouts_id_fkey', 'measurements', type_='foreignkey')
    op.create_foreign_key('meas_meas_set_id_fkey', 'measurements', 'measurement_sets', ['measurementset_id'], ['_id'], ondelete='CASCADE')
    op.drop_column('measurements', 'provenance_id')
    op.drop_column('measurements', 'cutouts_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('measurements', sa.Column('cutouts_id', sa.UUID(), autoincrement=False, nullable=False))
    op.add_column('measurements', sa.Column('provenance_id', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint('meas_meas_set_id_fkey', 'measurements', type_='foreignkey')
    op.create_foreign_key('measurements_cutouts_id_fkey', 'measurements', 'cutouts', ['cutouts_id'], ['_id'], ondelete='CASCADE')
    op.create_foreign_key('measurements_provenance_id_fkey', 'measurements', 'provenances', ['provenance_id'], ['_id'], ondelete='CASCADE')
    op.drop_index(op.f('ix_measurements_measurementset_id'), table_name='measurements')
    op.drop_index(op.f('ix_measurements_index_in_sources'), table_name='measurements')
    op.drop_constraint('_measurements_uc', 'measurements', type_='unique')
    op.create_index('ix_measurements_provenance_id', 'measurements', ['provenance_id'], unique=False)
    op.create_index('ix_measurements_cutouts_id', 'measurements', ['cutouts_id'], unique=False)
    op.create_unique_constraint('_measurements_cutouts_provenance_uc', 'measurements', ['cutouts_id', 'index_in_sources', 'provenance_id'])
    op.drop_column('measurements', 'measurementset_id')
    op.add_column('fake_analysis', sa.Column('provenance_id', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint('fake_anal_deepscore_set_id_fkey', 'fake_analysis', type_='foreignkey')
    op.create_foreign_key('fake_analysis_provenance_id_fkey', 'fake_analysis', 'provenances', ['provenance_id'], ['_id'], ondelete='CASCADE')
    op.drop_index(op.f('ix_fake_analysis_orig_deepscore_set_id'), table_name='fake_analysis')
    op.drop_constraint('fake_analysis_uic', 'fake_analysis', type_='unique')
    op.create_index('ix_fake_analysis_provenance_id', 'fake_analysis', ['provenance_id'], unique=False)
    op.drop_column('fake_analysis', 'orig_deepscore_set_id')
    op.add_column('deepscores', sa.Column('_algorithm', sa.SMALLINT(), autoincrement=False, nullable=False))
    op.add_column('deepscores', sa.Column('measurements_id', sa.UUID(), autoincrement=False, nullable=False))
    op.add_column('deepscores', sa.Column('provenance_id', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint('score_score_set_id_fkey', 'deepscores', type_='foreignkey')
    op.create_foreign_key('deepscore_measurements_id_fkey', 'deepscores', 'measurements', ['measurements_id'], ['_id'], ondelete='CASCADE')
    op.create_foreign_key('deepscore_provenance_id_fkey', 'deepscores', 'provenances', ['provenance_id'], ['_id'], ondelete='CASCADE')
    op.drop_index(op.f('ix_deepscores_index_in_sources'), table_name='deepscores')
    op.drop_index(op.f('ix_deepscores_deepscoreset_id'), table_name='deepscores')
    op.drop_constraint('_deepscore_unique_uc', 'deepscores', type_='unique')
    op.create_index('ix_deepscores_provenance_id', 'deepscores', ['provenance_id'], unique=False)
    op.create_index('ix_deepscores_measurements_id', 'deepscores', ['measurements_id'], unique=False)
    op.create_unique_constraint('_algorithm_measurements_provenance_uc', 'deepscores', ['measurements_id', '_algorithm', 'provenance_id'])
    op.drop_column('deepscores', 'index_in_sources')
    op.drop_column('deepscores', 'deepscoreset_id')
    op.drop_index(op.f('ix_deepscore_sets_provenance_id'), table_name='deepscore_sets')
    op.drop_index(op.f('ix_deepscore_sets_measurementset_id'), table_name='deepscore_sets')
    op.drop_index(op.f('ix_deepscore_sets_created_at'), table_name='deepscore_sets')
    op.drop_index(op.f('ix_deepscore_sets__upstream_bitflag'), table_name='deepscore_sets')
    op.drop_index(op.f('ix_deepscore_sets__id'), table_name='deepscore_sets')
    op.drop_index(op.f('ix_deepscore_sets__bitflag'), table_name='deepscore_sets')
    op.drop_table('deepscore_sets')
    op.drop_index(op.f('ix_measurement_sets_provenance_id'), table_name='measurement_sets')
    op.drop_index(op.f('ix_measurement_sets_cutouts_id'), table_name='measurement_sets')
    op.drop_index(op.f('ix_measurement_sets_created_at'), table_name='measurement_sets')
    op.drop_index(op.f('ix_measurement_sets__upstream_bitflag'), table_name='measurement_sets')
    op.drop_index(op.f('ix_measurement_sets__id'), table_name='measurement_sets')
    op.drop_index(op.f('ix_measurement_sets__bitflag'), table_name='measurement_sets')
    op.drop_table('measurement_sets')
    # ### end Alembic commands ###
